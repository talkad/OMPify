{"label": "parallel for ", "prediction": "omp parallel for collapse(3) schedule(static)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) private(p, weight_sum, sum) shared(out, in, ref)"}
{"label": "parallel for private(end j)", "prediction": "omp parallel for default(shared) private(i, j, d) reduction(+:yp[:height])"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i j k vxc)", "prediction": "omp parallel for collapse(3) private(l) shared(vx_temp, vx, dens, lxm, Pres, zone_size_x, dt, Pot, indPot, vy_temp, vy, lym, ymed, vxc, lxp, pitch, omf, ymin, IndirectTerm)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel ", "prediction": "omp parallel for schedule(static) num_threads(mglNumThr)"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(min:min"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for ordered"}
{"label": "parallel for reduction(+:sq1 sq12 sq2) private(i)", "prediction": "omp parallel for reduction(+: sq1, sq2, sq12)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(k)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+: lap) private(i indr j sxx)", "prediction": "omp parallel for reduction(+: lap)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(cut ix tt)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(j, k, lxp, src, dst)"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+:sum)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(i, j) shared(wynik, graf1, graf2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(pos_k_basis_index, neg_k_basis_index, intermediate_array, radial_part, complex_parts)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(          address_double g_addr ir_gps iw j k l m q r tetrahedra)", "prediction": "omp parallel for private(i, l, q, r, g_addr, address_double, ir_gps, k, tetrahedra, j, iw, m) shared(num_ir_gp, num_band, num_freq_points, num_coef, grid_address, relative_grid_address, ir_grid_points, gp2ir, frequencies, mesh, is_shift, freq_points, weights, coef, dos)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2) shared(u_, u, qx, qy, ro, pr, vx, vy) private(id, ro_, vx_, vy_, v2, e_)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private( i j)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for ordered"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3) shared(val) private(i, j, k, enc, dec, len)"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(wCur, wNei, diff, dW)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for private( j k_l)", "prediction": "omp parallel for private(k_L, k, k_temp, t, j, omega) shared(f_hat, f, ths)"}
{"label": "parallel for reduction(+:tmp) ", "prediction": "omp parallel for reduction(+: tmp)"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(ii)", "prediction": "omp parallel for default(none)"}
{"label": "parallel for reduction( +:r inscan) private(x x)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(idone_max idone_max idone_min idone_min odone_max odone_max odone_min odone_min)", "prediction": "omp parallel for shared(effstatus, idone_min, idone_max, odone_min, odone_max) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private( j maxtf)", "prediction": "omp parallel for"}
{"label": "for reduction(+:tmp1) private(ii)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private(c i im ix iz j)", "prediction": "omp parallel for collapse(2) shared(lt, wave, curr) private(ix, iz, i, j, c, im)"}
{"label": "parallel for reduction(+:privateCount)", "prediction": "omp parallel for reduction(+: privateCount)"}
{"label": "parallel for private( i j)", "prediction": "omp parallel for shared(arrayX, arrayY, xj, yj, CDF, u) private(i) reduction(+:num_tasks)"}
{"label": "for ", "prediction": "omp parallel for reduction(min:tmin)"}
{"label": "parallel for private(                                   a derivativevaluesptr x xcontrolpointcoordinates xx_x xx_y xx_z xy_x xy_y xy_z xz_x xz_y xz_z y ycontrolpointcoordinates yy_x yy_y yy_z yz_x yz_y yz_z z zcontrolpointcoordinates zz_x zz_y zz_z)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( i j)", "prediction": "omp parallel for"}
{"label": "for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static) "}
{"label": "for reduction(+:correct_predictions) ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for shared(nodes, missingLinksPrivate)"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for private(adult i)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(&& : done) ", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:noncontainedreads) ", "prediction": "omp parallel for reduction(+:nonContainedReads)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(v, i_thread_num) shared(B, d, VertexThreadGroup)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for shared(intor, mat, dims, shls, atm, natm, bas, nbas, env, opt, cache) private(ij, ish, jsh, grid0, grid1, i0, j0)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:energy) ", "prediction": "omp parallel for reduction(+:energy)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(ap, bp, ar) shared(A, B)"}
{"label": "parallel for private(   i it j jt)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(          i ip ir jm jp kshift longpart temp1 temp2 tp tt)", "prediction": "omp parallel for"}
{"label": "parallel for private(b b fx fy fz g g r r x xr y yr z zr)", "prediction": "omp parallel for private(v, u, pt, lab, R, G, B, r, g, b, X, Y, Z, xr, yr, zr, fx, fy, fz) shared(cloud, im_lab)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(ijob, i) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(ic ir ix iz)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(tls)", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for schedule(static) shared(GB, G, G4, n, mglNumThr)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(4) shared(x, denoms, y)"}
{"label": "parallel for private(  i j k)", "prediction": "omp parallel for private(i, j) reduction(+:v)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(k)", "prediction": "omp parallel for schedule(dynamic)"}
{"label": "simd for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for "}
{"label": "parallel for reduction( +:num_truncated_bases total_truncated_reads) ", "prediction": "omp parallel for"}
{"label": "parallel for private(priv_key_shadow)", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(min:mini) reduction(max:maxi) ", "prediction": "omp parallel for reduction(max:maxI) reduction(min:minI)"}
{"label": "parallel for reduction(+ : number_tips) private(path)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(4) schedule(dynamic)"}
{"label": "for ", "prediction": "omp parallel for private(i, row, a_row, c_row, j, cval, k) reduction(+: counter, sum)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "for reduction(+:correct_predictions) ", "prediction": "omp parallel for"}
{"label": "parallel for simd reduction(  +:a[:n] b inscan) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for "}
{"label": "parallel for private(i len1 m n si sj)", "prediction": "omp parallel for private(si, sj, n, m, i, len1, len2, c, gg, g, gh, seq1, seq2, se1, se2, sb1, sb2, maxscore, print_ptr, last_print, displ, mm_score) shared(nseqs, bench_output, seqlen_array, seq_array, gap_pos1, gap_pos2, pw_ge_penalty, pw_go_penalty, mat_avscore, dnaFlag, gap_open_scale, gap_extend_scale)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:jj) ", "prediction": "omp parallel for reduction(+:jj)"}
{"label": "parallel ", "prediction": "omp parallel for schedule(static) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(tid) shared(flags) schedule(dynamic)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:t) ", "prediction": "omp parallel for reduction(+:t)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(x)", "prediction": "omp parallel for reduction(+: totalsum)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(k)", "prediction": "omp parallel for private(j, k) shared(A, B)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(dynamic) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for shared(ids, ppls, features, descriptorSize, counts, imgmatch, imgcounts, index, indices_array, dists_array, writelock, correct, success_num, fail_num) private(i, j, k, code, query, indices, dists, added, maxCount, maxId)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for default(none) shared(ninpoin, ndim, nbpoin, srad, ip, bp, co, rbfunc) "}
{"label": "for ", "prediction": "omp parallel for schedule(static, 1)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:current_product) private(k)", "prediction": "omp parallel for reduction(+: current_product)"}
{"label": "parallel for ", "prediction": "omp parallel for shared(found)"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(dynamic)"}
{"label": "for ", "prediction": "omp parallel for "}
{"label": "parallel for private(ix iz)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for reduction(min:min) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "for private(dtstats)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for schedule(static, 1)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) shared(image, subtract, clampblack) schedule(static)"}
{"label": "for private(i)", "prediction": "omp parallel for reduction(+:tmp)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(^:exclusiv_bit_or)"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+: sum)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(                  delew delns grad_lat_zero grad_lon_zero i ie im1 in ine inw ip1 is ise isw iw j jm1 jp1 n)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:energyrecip[:lambdasize]) ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private(    indx ix ixq iy iyq)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(p)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for collapse(3)"}
{"label": "for private(k)", "prediction": "omp parallel for reduction(+:eng_tmp)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for "}
{"label": "for reduction(+:ktx) private(degree_u j)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+ : ans) ", "prediction": "omp parallel for collapse(2) reduction(+:ans)"}
{"label": "for reduction(+:sx sy) ", "prediction": "omp parallel for private(kk, t1, t2, i, ik, t3, x1, x2, t4, l, sx, sy) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) private(validPeriod, statXY)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(dynamic)"}
{"label": "for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(j) collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "for ", "prediction": "omp parallel for collapse(2) reduction(max:highestMutualThread)"}
{"label": "parallel for private(snr1 snr2)", "prediction": "omp parallel for schedule(dynamic) reduction(min:zmin) reduction(max:zmax)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for shared(wavelet, minZ, maxZ) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for private(j, k, max) shared(array_test_class_probability, array_test_class, array_class_probability, array_probability, array_probability_index, array_test, propertyn, classn, linen)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:sum) private(i)", "prediction": "omp parallel for reduction(+:sum)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(gc j)", "prediction": "omp parallel for schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(curr_eid)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(+:ad[:*neq])"}
{"label": "parallel for private(indx)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private(beta i j)", "prediction": "omp parallel for shared(Ezzstar, Ett, Exx, Ebb, Ezstar, Etau, Ex, Eb, Edd) private(j, beta, i)"}
{"label": "parallel for private(ix)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for shared(system, bonds) private(j, start_j, end_j, pk, bo_jk, k)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static) num_threads(numThreads)"}
{"label": "parallel for private(k n)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for num_threads(omp_get_max_threads())"}
{"label": "parallel for reduction( +: dbmatchessum kmersperpos) ", "prediction": "omp parallel for private(id, thread_idx, seqData) reduction(+: kmersPerPos, dbMatchesSum)"}
{"label": "parallel for reduction(+:f) private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(conditional: w2)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(laf_correction, elev_correction) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(ix iz)", "prediction": "omp parallel for collapse(2) "}
{"label": "parallel for private(     i mic_read_index single_read_count single_read_size single_result_size tmp_cal_arg)", "prediction": "omp parallel for schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+: haplotype_score)"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(||: anyValidPP)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for simd ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for schedule(dynamic) reduction(+:mymap->map[:tod->ndata])"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(dynamic) reduction(+:neighborhoodSectionBlockCenters,neighborhoodSectionBlocks) private(neighborhoodSectionBlockCenters,neighborhoodSectionBlocks)"}
{"label": "parallel for private(i j)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+ : ans) ", "prediction": "omp parallel for reduction(+: ans)"}
{"label": "parallel ", "prediction": "omp parallel for private(k, j) schedule(static) "}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(j) reduction(+:sumt) "}
{"label": "parallel for private(k)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:v0) reduction(+:v1) reduction(+:v2) reduction(+:v3) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(j)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for "}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(c_ptr, cl, cr, f, c_ptr2, j, l, aux) shared(grid, Solution, R)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(cont j)", "prediction": "omp parallel for schedule(static)"}
{"label": "for private(  g g1 sivar)", "prediction": "omp parallel for private(g, g1, sivar)"}
{"label": "for reduction(+:kurtr kurti) ", "prediction": "omp parallel for reduction(+:kurtr,kurti)"}
{"label": "parallel for private(a)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(ithr) schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(4) schedule(dynamic)"}
{"label": "parallel for reduction(+:nvisible) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for "}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(&: status) "}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(buf)"}
{"label": "parallel for ", "prediction": "omp parallel for "}
{"label": "parallel for private(i j k l)", "prediction": "omp parallel for"}
{"label": "parallel for private(   buf i j k)", "prediction": "omp parallel for private(i, j, k, buf) shared(cin, cout, nout, Nspec, Nch, Nav)"}
{"label": "parallel for private(i j k)", "prediction": "omp parallel for private(som)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3) schedule(static)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(       i ik k mi mk o si sk)", "prediction": "omp parallel for reduction(+:sum)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for reduction(+:c[x:4]) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( cols rows)", "prediction": "omp parallel for schedule(dynamic)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) private(k, temp) shared(A, B)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(theta)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for shared(ks, keydata, cracked, any_cracked) private(index, res)"}
{"label": "parallel for ", "prediction": "omp parallel for private(y, pixel, alpha, gamma, k, i) shared(blur_image, image, kernel, p, width, channel, indexes, q, blur_indexes)"}
{"label": "parallel for ", "prediction": "omp parallel for default(none) shared(rep, kDim, mDim, minIteration, maxIteration, lbPosTh, annealSteps, maxTFlucAmp, minTFlucAmp, initType_whiteNoise, initType_randomCluster, initType_kMeans, data, in_name, out_name, conds, results, temps, scores) "}
{"label": "parallel for private(n)", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:t) ", "prediction": "omp parallel for reduction(+:t)"}
{"label": "parallel for private(i ix iy iz x y z)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(dl dlm1 dlp1 index_mu l ll)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(a j p)", "prediction": "omp parallel for collapse(2) reduction(+:p)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for ordered"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for private(k, j) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(dynamic) reduction(+:completed)"}
{"label": "parallel for ", "prediction": "omp parallel for default(none) shared(NUMFRM)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for private(iwidth)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for shared(views_, keypoints_, descriptors_)"}
{"label": "parallel for reduction(+:error) private(i j temp xx yy)", "prediction": "omp parallel for private(xx, yy, temp, j) reduction(+: error) firstprivate(dx, dy)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+:skinningWeightOk)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+ : errors) ", "prediction": "omp parallel for reduction(+:errors)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for "}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for default(shared) private(i,ind,row,col,sta_col,end_col,sta_row,end_row,p,rowind,q) schedule(dynamic)"}
{"label": "parallel ", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(+: fix, fiy, fiz, t_eng_vdwl, t_virial) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(temp_slopes, k, train_slopes) reduction(+:next_step)"}
{"label": "parallel for reduction(+:sum) private(i)", "prediction": "omp parallel for reduction(+:sum)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( pdark pimgbb)", "prediction": "omp parallel for"}
{"label": "for reduction(+:skew) ", "prediction": "omp parallel for reduction(+: skew)"}
{"label": "for private(g)", "prediction": "omp parallel for private(i) shared(g)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(+: hit)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(  + : sum) private(  thread)", "prediction": "omp parallel for reduction(+:sum)"}
{"label": "parallel for ", "prediction": "omp parallel for\" directive. Here is the modified code:"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i ix iz j k)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(             i ia ibase ifac ii istart ix j jbase jj k la nvex wgp)", "prediction": "omp parallel for private(wgp, ia, la, ifac, ibase, jbase, i, j, ii, ix) shared(wfc, trig, nx, nvex, nlon, nfax, nblox, istartv, nvex0, NFFT, ifax) schedule(static)"}
{"label": "parallel for private( root vec2mean)", "prediction": "omp parallel for default(none) shared(nSkipped, LogP, Class, OldClass, DistThresh, MinMaskOverlap, FloatMasks, nDims, CurrentCov, MinMaskOverlap, Data, Mean, Vec2Mean, UseDistributional, CholBPD, Root, InvCovDiag, correction_factor, CorrectionTerm, LogRootDet, Weight, M_PI) reduction(+: nSkipped) schedule(static) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(                  c currentcoeffsum finalvalue i imagevalue index it t temp windowvalue x y y z)", "prediction": "omp parallel for collapse(3) shared(image, radius, window, readingValue, writtingValue) schedule(static)"}
{"label": "parallel for private(k)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(m)", "prediction": "omp parallel for private(m, n) schedule(dynamic)"}
{"label": "for ", "prediction": "omp parallel for collapse(3) reduction(+:n)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel reduction(sumt:sum) ", "prediction": "omp parallel for reduction(+: sum)"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(dynamic)"}
{"label": "parallel for private(tgt_cell_add)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(: max max_norm) ", "prediction": "omp parallel for reduction(max:max_norm)"}
{"label": "parallel for reduction(+:total_links) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel fo"}
{"label": "parallel for private(k)", "prediction": "omp parallel for reduction(max:dmax) reduction(+:dsq)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:sum) ", "prediction": "omp parallel for reduction(+:sum)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(   c1 c2 p yj)", "prediction": "omp parallel for private(yj, c1, c2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:sum_deviation) ", "prediction": "omp parallel for reduction(+: sum_deviation)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+ : gradgamma[:cols]) ", "prediction": "omp parallel for simd reduction(+ : sum_x, sum_adj_x, sum_adj)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(+:corr_coeff)"}
{"label": "parallel for reduction(+ : count_palindrome) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(k)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(4)"}
{"label": "parallel for ", "prediction": "omp parallel for shared(fa, fb, d) reduction(+:r) schedule(dynamic)"}
{"label": "parallel for reduction(+:squares) private(i)", "prediction": "omp parallel for reduction(+: squares)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel ", "prediction": "omp parallel for schedule(static) shared(a,b) private(j,v) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(c cid k)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static) private(id, sync, duplex_indexes, indexes, duplex_pixels, pixels, destination_indexes, x, destination_pixels)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(dd vv x1 x2)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:used_dense_feature_groups) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(local_rainfall_rate) shared(elevations, old_j_mean_array, jo_array, j_array, new_j_mean_array)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(n sd)", "prediction": "omp parallel for collapse(2) "}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(k)", "prediction": "omp parallel for collapse(2) reduction(+:B) private(j, k) schedule(static)"}
{"label": "for ", "prediction": "omp parallel for ordered"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(indvdl, j) reduction(+:indvdl->phi)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for shared(resultDbr, targetElementSize, tmpData) private(progress, data, queryKey, queryKeyStr, tmpBuff, dbKeyBuffer) schedule(static)"}
{"label": "parallel ", "prediction": "omp parallel for schedule(static) "}
{"label": "parallel for simd private(si)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:num_mercy) ", "prediction": "omp parallel for schedule(static, 1)"}
{"label": "for reduction(+:a[:3]) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+:sum)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(j)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3) schedule(static) num_threads(num_threads)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for num_threads(g_numprocs)"}
{"label": "parallel for reduction(+:bknum) ", "prediction": "omp parallel for reduction(+: bknum)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(j) shared(processing) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for reduction(+:epot_acc) private(c cid count j k p)", "prediction": "omp parallel for private(cid, c, count, k, p, j) reduction(+:epot_acc)"}
{"label": "parallel for simd ", "prediction": "omp parallel for directive. However, there are a couple of considerations based on the nature of the loop. The loop variable is a char type, and using '\\1' as the loop increment may not work correctly."}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction( + : count sumdistance) ", "prediction": "omp parallel for reduction(+:sumDistance, count)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for private(j k m)", "prediction": "omp parallel for collapse(3) private(i, j, k, m) shared(grid_points, rhs, u)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(j) shared(samples, N, positions, separations, display) "}
{"label": "for ", "prediction": "omp parallel for private(i, j, k)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for reduction(+:b[4:3]) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(x, b, k, i, ic, is, j, jc, js, z1, z2) shared(flw, dp)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) default(none) shared(max, p, temp, m_eval, m_division, m_rank, res)"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+:corr)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i j)", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for reduction(+:entropy) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for simd ", "prediction": "omp parallel for schedule(static) reduction(+:I)"}
{"label": "parallel for private(iidx)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private(conditional: p3)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(6) reduction(+:sum) schedule(static)"}
{"label": "for ", "prediction": "omp parallel for schedule(static)"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:totalsize) ", "prediction": "omp parallel for reduction(+:totalSize)"}
{"label": "parallel private(    block fd i j name)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for schedule(static) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(dynamic)"}
{"label": "parallel for private(   i k kmax xsum1)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+:M)"}
{"label": "parallel for ", "prediction": "omp parallel for shared(ISDmat, maxdiff, avgdiff) reduction(+:finished_calcs) schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(3) default(none) shared(rhs, grid_points, dt) private(m, i, j, k) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for reduction( +:r2 s2) private(conditional: v2)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(k ratio)", "prediction": "omp parallel for private(j, k, ratio) "}
{"label": "parallel for ", "prediction": "omp parallel for shared(cracked, any_cracked)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static) collapse(2) reduction(&&:status) "}
{"label": "parallel for private(d s v)", "prediction": "omp parallel for schedule(static) shared(simg, out, n) "}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(a_marker i i1 i2 i3 ic ii j jcol jj1 jj2 jj3 jj_count_diag jj_count_offd jj_row_begin_diag jj_row_begin_offd k ne ns p_marker rest size)", "prediction": "omp for"}
{"label": "for ", "prediction": "omp parallel for private(Sprev, S) shared(segments)"}
{"label": "for private(   i j v0 v1)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(currentstate)", "prediction": "omp parallel for"}
{"label": "parallel for private(i__)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+:ret_val)"}
{"label": "parallel for ", "prediction": "omp parallel for shared(NON_unique_regions_of_genome, map_cumulative_genome_position_to_chromo, Event::centromere_coordinates, non_sex_chromosome_lengths, map_chromo_to_seq, my_BAM_reader, sampled_observed_counts_per_GC_content) private(samp, chr_of_random_draw, chromo_position_of_random_draw, draw_is_acceptable, num_attempts, cumulative_genome_position_random_draw, it_cumu, acceptable_p_arm, acceptable_q_arm, test_seq, gc_count__random, number_observed_reads)"}
{"label": "parallel ", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:sum) ", "prediction": "omp parallel for reduction(+:sum)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(indiv)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(ix iz j)", "prediction": "omp parallel for collapse(2) reduction(+:ccr)"}
{"label": "parallel for ", "prediction": "omp parallel for private(pSourceBegin, pDestination, numerator, denominator, pSource, pSourceEnd, kk) shared(luminance, temp, filter)"}
{"label": "for reduction(+ : lp) ", "prediction": "omp parallel for reduction(+:lp) private(scale, f, b, T, E, logp)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( nend nstart)", "prediction": "omp parallel for num_threads(gameStates.app.nThreads)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i j)", "prediction": "omp parallel for collapse(2)"}
{"label": "for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(   distance i j tmp)", "prediction": "omp parallel for"}
{"label": "for private(i)", "prediction": "omp parallel for private(i, it, mu, list_dirs, d) shared(slice, LCU, directions, lev, lat2, lat, type, project)"}
{"label": "parallel private(  i phase tmp)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(k l p)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+ : err) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:sum_r1 sum_weight_total) ", "prediction": "omp parallel for private(j, prod_r0, prod_r1) reduction(+:sum_r1,sum_weight_total)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private( ix iz)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2) schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(p)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(3) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for simd ", "prediction": "omp target parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:result) private(i)", "prediction": "omp parallel for reduction(+:result)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+ : cum_count) private(count)", "prediction": "omp parallel for reduction(+:cum_count) schedule(static)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for reduction(+ : l) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(lbv t3 t4 ubv)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(dynamic)"}
{"label": "parallel for private(    c col current indx row)", "prediction": "omp parallel for private(row, col, indx, c, current) collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private( col row)", "prediction": "omp parallel for collapse(2) schedule(static, 1)"}
{"label": "parallel for reduction( * : accum_i accum_r) ", "prediction": "omp parallel for collapse(3) default(none) shared(sp, dp, planes, planesize, linesize, reverse)"}
{"label": "parallel for reduction( +:err num_es_touched) private(c)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(max:maxval2) ", "prediction": "omp parallel for reduction(max:maxval2)"}
{"label": "parallel for private(au av)", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:err) private( diff k)", "prediction": "omp parallel for reduction(+:err) \\"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for ordered"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(k)", "prediction": "omp parallel for collapse(2) private(k) shared(Map, Vel, Switch, itp1, itp2, MassBoat, height, Foundering_height) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) default(shared) private(y, x, blockExtents, coordinate, pt, bValid, z, result, p, predictor, sum\u00b2, stdDev, weight, k, stat) reduction(+:m_options.m_xx) schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for simd reduction(-:a_ij) aligned(a:64)"}
{"label": "parallel for private(j)", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(ix iz)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(theta)", "prediction": "omp parallel for"}
{"label": "parallel for private(ix iz)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private( i j)", "prediction": "omp simd aligned(udiff:ALIGNMENT, unew:ALIGNMENT, u:ALIGNMENT)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(comment_line id_line nreads quality_line seq_line vr)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(j, temp_predicted_output) shared(predicted_outputs) schedule(dynamic)"}
{"label": "for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for private(i, ii, iter_i, moving_ptr) shared(ptr, str, fun)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:flag) ", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+:sum_grad,sum_hess) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static) num_threads(mglNumThr)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(iwidth)", "prediction": "omp parallel for"}
{"label": "parallel for private(ix iz)", "prediction": "omp parallel for private(ix) shared(p0, p1, bndr)"}
{"label": "parallel for private(k)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:loss) ", "prediction": "omp parallel for reduction(+: loss)"}
{"label": "parallel for ", "prediction": "omp parallel for num_threads(FLAGS_n_threads)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(j, y, pixel, invalid, point, indexes, i, id, x, q, validity) shared(distort_image, distort_view, resample_filter, coefficients, method, geometry, bestfit, image, status) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(  alpha i x y)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3) schedule(static)"}
{"label": "parallel for private(l_z)", "prediction": "omp parallel for"}
{"label": "parallel for private( ix iz)", "prediction": "omp parallel for collapse(2) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for private(ihx imx imy imz iw ompith w)", "prediction": "omp parallel for private(iw, ompith, w) shared(cub, slo, weop, imag, tap, data) default(none) schedule(dynamic) num_threads(NUM_THREADS)"}
{"label": "parallel for private(                                      ic iht ihx ihz mct mcx mcz pct pcx pcz)", "prediction": "omp parallel for collapse(4)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for default(none) shared(image_view, hald_view, image, level, cube_size, width, channel, exception) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(ii)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(  diff1 diff2 i1 i2 tmp)", "prediction": "omp parallel for collapse(2) shared(vv, vz, vx, p) private(i2, i1, tmp, diff1, diff2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(                       fac fac1 index_mu l lens lensm lensp ll res resm resp resx x_000 x_022 x_121 x_132 x_220 x_242 x_p000 x_p022)", "prediction": "omp parallel for private(index_mu, l, ll, fac, fac1, X_000, X_p000, X_220, X_022, X_p022, X_242, X_132, X_121, res, lens, resX, lensp, lensm, resp, resm)"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(jj)", "prediction": "omp parallel for"}
{"label": "for simd ", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for simd collapse(2) schedule(static)"}
{"label": "parallel for private( dir settings)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(k)", "prediction": "omp parallel for private(j,k,acc) shared(C,A,B,n,alpha,beta)"}
{"label": "parallel for reduction(+:etot) ", "prediction": "omp parallel for default(none) shared(s, pot, rCut2, etot) "}
{"label": "parallel for private(j)", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:total_points) ", "prediction": "omp parallel for reduction(+: total_points)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+: ave_depth[:atom_number], std_depth[:atom_number])"}
{"label": "parallel for ", "prediction": "omp parallel for default(none) shared(count, saved_key, cur_salt, crypt_out) private(index) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for default(none) shared(n, m, diag, A, lda, B, ldb, X, ldx, alpha) schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for private(y,pixels,p,x,q,width,j,p,i,channel,texture_traits,traits) shared(status,texture_view,texture_image,image_view,image,exception)"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for private(  def_j def_jp1 i j jp1 r)", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for collapse(4)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( index uid)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(             db0 dwrnd gxgrid gygrid gzgrid mx my mz rho slicei t1 t2 txcoilmg txcoilpe)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for private(  arr is js)", "prediction": "omp parallel for default(none) shared(ns, ns2, knum_minus, snum, kpairs, ik_now, arr, v3_arr_loc, kmesh_in, eval_in, evec_in, phase_storage_dos) reduction(+ : v3_arr_loc)"}
{"label": "parallel for private(i j norm)", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( x y)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:count) private(tt)", "prediction": "omp parallel for reduction(+:count)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(    j k momentum ndelta new_dw nly)", "prediction": "omp parallel for collapse(2) shared(w, oldw)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(  ix iy x)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) shared(ptr2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) shared(input, haplotypes, variant_group, read_ids, alignment_flags, methylation_types) "}
{"label": "for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(lbv t3 t4 ubv)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i1 i2)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(je) reduction(+: optfail, checkzeros)"}
{"label": "parallel for private(i j k l)", "prediction": "omp parallel for collapse(3) default(none) shared(nxpad, nypad, nzpad, dx, dy, dz, _mix, coeff_1dx, coeff_1dy, coeff_1dz, p2, q2, r2, px_tmp, qy_tmp, rz_tmp) schedule(static)"}
{"label": "for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i j k)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for shared(spin, inside, curProg, n, prog) "}
{"label": "parallel for ", "prediction": ""}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(ix iy iz sxx sxy syy syz szx szz)", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(j, temp_predicted_output) shared(predicted_outputs)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(+:sumthrv,sumthr)"}
{"label": "for ", "prediction": "omp parallel for default(none) shared(work, st, zx, zy, zz, H) \\"}
{"label": "parallel for ", "prediction": "omp parallel for private(traj, tlen, cx, cy, nx, ny, cur_reward, caction, nnaction, nnx, nny, sx, sy, sa, sr, pval, target, td_error) shared(env, emask, w, h, tx, ty, outside_penalty, max_tlen, actions, vfuncs, NUM_TRAJECTORIES)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:se) ", "prediction": "omp parallel for reduction(+: se)"}
{"label": "parallel for private(contrast difb difl diflb diflt difr difrb difrt dift f1 f2 f3 f4 i j lumd1 lumd2 lumh lumv offset s v wd1 wd2 wh wv)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:num_ir) ", "prediction": "omp parallel for reduction(+:num_ir)"}
{"label": "parallel for private(    e i k u v)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) reduction(+:r,g,b,sq)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(i)", "prediction": "omp parallel for schedule(static) reduction(+:privateByteCounter)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(3)"}
{"label": "for ", "prediction": "omp parallel for ordered"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(k)", "prediction": "omp parallel for collapse(2) schedule(dynamic)"}
{"label": "parallel for private( x y)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:acc) private(i)", "prediction": "omp parallel for reduction(+:acc)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for simd"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(                                  drsq dx1 dx12 dx2 dxtotal dy1 dy12 dy2 dytotal esq ex ey k1x k1y k2x k2y k3x k3y k4x k4y p rx1 rx2 rx3 ry1 ry2 ry3 v1x v1y v2x v2y v3x v3y v4x v4y)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:dinv) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( ix iz)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for' directive. Here's the updated code with the OpenMP pragma:"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(plane, newplane, fmin, fmax, average, img0) shared(image, _result) reduction(+:progress)"}
{"label": "parallel ", "prediction": "omp parallel for schedule(static) num_threads(mglNumThr)"}
{"label": "parallel for private(au)", "prediction": "omp parallel for shared(a, x, b) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for reduction(+:tmp) private(  apvec apvec j pvec val)", "prediction": "omp parallel for default(none) shared(ndata, ptr, val, pvec, col, apvec)"}
{"label": "parallel for ", "prediction": "omp parallel num_threads(i_MaxNumThreads)"}
{"label": "for ", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for ordered"}
{"label": "parallel for private(i j k)", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+:vc)"}
{"label": "for ", "prediction": "omp parallel for collapse(2) private(ii, k, i)"}
{"label": "for ", "prediction": "omp parallel for private(i) shared(result, nr_threads_in_single, nr_iterations)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(+:localasum)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(currenti currentj distij distik distjk edge)", "prediction": "omp parallel for"}
{"label": "parallel for private(lbv t3 t4 t5 t6 t7 t8 ubv)", "prediction": "omp parallel for collapse(7) "}
{"label": "parallel for ", "prediction": "omp parallel for shared(error, progress, stack, rawParameters) schedule(dynamic)"}
{"label": "for ", "prediction": "omp parallel for collapse(2) schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for collapse(3) private(k1, k2, fac1, m)"}
{"label": "for ", "prediction": "omp parallel for shared(nVerticesDone) schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for simd"}
{"label": "parallel for reduction(+:pe) private(                forcecoeff invpy invpypow3 invpypow4 invpypow6 j k pythagorean sigma sigmapow12 sigmapow6 vectors)", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for private(prevSum, n, temp) shared(ByteCounter, globalHisto)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(temp)", "prediction": "omp parallel for collapse(2)"}
{"label": "for reduction( + : ene) ", "prediction": "omp parallel for reduction(+:ene) schedule(static)"}
{"label": "parallel for private(h1 h2 i1 i2 ic il j1 j2)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(ix iz)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(iel miel mielnew ntemp)", "prediction": "omp parallel for"}
{"label": "for reduction(      +: dbmatches diagonaloverflow doublematches kmersperpos queryseqlensum ressize trancatedcounter) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(flag)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(i)", "prediction": "omp parallel for reduction(max:ThreadMax) reduction(min:ThreadMin)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(iop ix iy iz)", "prediction": "omp parallel for collapse(3) schedule(static)"}
{"label": "for private(i)", "prediction": "omp parallel for shared(char_ptr_tempSource, privateByteCounter, SourceSize_in_bytes) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for simd"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for private(pdark pflat pimg)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(dynamic) shared(checknodes, checkednodes, em, lem, g, org_g, nodesindex, org_nodesindex, em, org_em, p, org_p, d, org_d, result)"}
{"label": "for private(i j)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for reduction(+:s) ", "prediction": "omp parallel for reduction(+:s)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(k)", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(dynamic)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for simd reduction(   +:r inscan r2 r3) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( k row_index_j)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:s) ", "prediction": "omp parallel for reduction(+:s)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(min:dt) ", "prediction": "omp parallel for"}
{"label": "parallel for private(index orientation x y)", "prediction": "omp parallel for default(none) shared(m_h, m_w, g_grid_orientation_resolution, m_orientation_map, m_dense_descriptors, m_descriptor_size) private(y, x, index, orientation)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(j, i, o, t) shared(a, b) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(d s v)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(4)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(max:m)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(&&:bit_and)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2) "}
{"label": "for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for reduction(+:niters) private(  i j x)", "prediction": "omp parallel for collapse(2) schedule(dynamic, 1) reduction(+:niters)"}
{"label": "parallel for ", "prediction": "omp parallel for\" directive. Here's the optimized code:"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for ordered\" placed before the \"for\" loop:"}
{"label": "parallel for private(     buffer cases feedback j k out)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3) default(none) shared(output, sigmaTransformed, nX, nY, nEns, mBoxCoxThreshold, mLambda, mX, mY) "}
{"label": "parallel for ", "prediction": "omp parallel for schedule(dynamic, 1) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(site)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for private(j)", "prediction": "omp parallel for collapse(2) private(i, j) shared(data, mean, stddev, float_n)"}
{"label": "parallel for private(currenti currentj currentk currentl)", "prediction": "omp parallel for"}
{"label": "parallel for private(cc_i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "simd for reduction(-:a_jj) private(i2)", "prediction": "omp parallel for reduction(-:a_jj)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(      ix iy mid r00 r01 r10 r11)", "prediction": "omp parallel for collapse(2) private(r01, r11, r00, r10, r01, r11, mid)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for shared(Label, chunk) schedule(dynamic)"}
{"label": "for private(iz)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:s_time) private(   delta i t t2)", "prediction": "omp parallel for shared(samples, s_time, inv_samples, delta, t, t2, venv, a_phase, vsin) "}
{"label": "for reduction(+:dos) private(i k)", "prediction": "omp parallel for reduction(+:dos)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for reduction(+:sin_sum cos_sum) ", "prediction": "omp parallel for reduction(+:sin_sum,cos_sum)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(                 a b index intensity previous relative voxel world xbasis xtempnewvalue xypointer y ybasis)", "prediction": "omp parallel for"}
{"label": "parallel for private(mu)", "prediction": "omp parallel for private(mu, a, b)"}
{"label": "parallel for private( qa rowcol)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+:ndc) private(nNearestNeighbors) schedule(static)"}
{"label": "parallel for private(p)", "prediction": "omp parallel for reduction(+: mtot, etot[1], etot[2]) \\"}
{"label": "for ", "prediction": "omp parallel for collapse(3) reduction(+:this->threeBodyChanDims[sp_a].phhDim)"}
{"label": "for ", "prediction": "omp parallel for shared(cluster_assignments, localclustercount, localscore) private(i) "}
{"label": "for reduction(*:prod) ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(j, i) shared(NumInputs, sourceNDT, sourceNDTHere, ps)"}
{"label": "for private(suma suma)", "prediction": "omp parallel for reduction(+: suma)"}
{"label": "parallel for ", "prediction": "omp parallel for private(b, nnz, prevEnd, r, t) shared(levIndices, reversePerm, bBuffer, b, taskRows, costFunction, aggregateForVectorization)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(ic ir ix iz)", "prediction": "omp parallel for private(ic, ir, ix) shared(Nz, Ncx, Nrx, DX, fwdx, CX, RX, invx)"}
{"label": "parallel for private(batch)", "prediction": "omp parallel for"}
{"label": "parallel for private(i j)", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+:nclose)"}
{"label": "for ", "prediction": "omp parallel for collapse(3) default(none) shared(par) schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:result) ", "prediction": "omp parallel for reduction(+:result)"}
{"label": "parallel for reduction(pair_max:maxpair) ", "prediction": "omp parallel for "}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(index1 index2 index3 j k l pp rpp sl weight)", "prediction": "omp parallel for collapse(3)"}
{"label": "for private(i j n4)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:npos) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(tri_rat_filter, sumneighbors) shared(_cam_tri_ratings, _tri2tri, tri_ratings)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(face i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+ : energy) ", "prediction": "omp parallel for collapse(3) reduction(+: energy)"}
{"label": "parallel for ", "prediction": "omp parallel for private(part_i_pos, part_j_pos)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for collapse(3)"}
{"label": "for ", "prediction": "omp parallel for schedule(static) collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for simd collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for shared(stop)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "for private(k m)", "prediction": "omp parallel for private(j, k, m)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(x)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(j sum)", "prediction": "omp parallel for schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+: kej nabx naby nabz rho) private(cc chib i indr j tgx tgy tgz)", "prediction": "omp parallel for private(indp, chib, tgx, tgy, tgz, cc) reduction(+:rho, kej, nabx, naby, nabz)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(iel)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static) private(tid) shared(array)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(k)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:correct_predictions) ", "prediction": "omp parallel for reduction(+:correct_predictions)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(ibody)", "prediction": "omp parallel for"}
{"label": "parallel for private( a2 b2 c2 val_ab2 val_abac2 val_abbc2 val_ac2 val_bc2)", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:uddavg lddavg) reduction(lddmin min:uddmin) ", "prediction": "omp parallel for"}
{"label": "parallel for private(c v)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for schedule(dynamic) reduction(+:newChi2)"}
{"label": "parallel for ", "prediction": "omp for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for "}
{"label": "parallel for private(    avg i j npx p rowsum)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(dynamic)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private( j prod_matrix)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(  + : sum) ", "prediction": "omp parallel for reduction(+:sum)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for shared(activityBatch, gSynPatchHeadBatch, gatePatchHeadBatch) private(loopIndex, kPreExt, a, gSynPatchHead, gatePatchHead, weights, nk, ny, sy, weightDataStart, postPatchStart, postGatePatchStart, kxPreExt, kyPreExt, kfPre, kxPreGlobalExt, kyPreGlobalExt, kPreGlobalExt, offset, sf, w, relative_XScale, relative_YScale, auxPtr) schedule(dynamic)"}
{"label": "parallel for private(ih ix)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for shared(outputbuffer, totaldata, progress) private(outputindex, outbuf, oldfraction, newfraction)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for simd"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(minDistance, nearEdge, nearParam) schedule(dynamic)"}
{"label": "for private(conditional: i1 l2 l3)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(ix iz)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(temp)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for ordered"}
{"label": "parallel for reduction(+ : sum) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for private(i1 i2)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(dist)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:temp) private( a_n i)", "prediction": "omp parallel for reduction(+:temp)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for reduction(+:tmp) ", "prediction": "omp parallel for reduction(+:tmp)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(n)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for schedule(static)"}
{"label": "parallel private(a this->a)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(4)"}
{"label": "parallel for private(c)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(buf, buf_in, sum, ip) collapse(2)"}
{"label": "for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for num_threads(omp_p)"}
{"label": "parallel for private(ii)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) default(none) shared(N, _N_real, _gravity_ignore_10, particles, softening, G)"}
{"label": "for ", "prediction": "omp parallel for collapse(2) "}
{"label": "parallel for reduction(+ : n) private(      h0 h1 h2 sumsq t0 t1 t2)", "prediction": "omp parallel for"}
{"label": "parallel for private(      i j ki md ms mtemp mtemp2)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(i, j, outval, outtime) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) "}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) default(none) shared(A, B, C, n, m, k, lda, ldb, ldc, alpha, beta) "}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private(  currentriverreachmethods currentriverreachproperties currentupstreamproperties)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for shared(r,x,y,z) private(i0,i,j,k,ip,jp,kp,im,jm,km) schedule(static) "}
{"label": "for private(     c col d f indx row)", "prediction": "omp parallel for collapse(3)"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:result) ", "prediction": "omp parallel for reduction(+:result)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(  col2 i temp)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for "}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:x[2:5]) ", "prediction": "omp parallel for"}
{"label": "parallel for private(temp1 temp2)", "prediction": "omp parallel for default(none) shared(complex_buff, response, j, k) private(temp1, temp2)"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static) private(j)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(dim i_cl)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(dynamic) "}
{"label": "parallel for reduction(  +:mean_flux nbins_used tau_mean_flux) ", "prediction": "omp parallel for reduction(+:mean_flux, tau_mean_flux, nbins_used)"}
{"label": "parallel for reduction(+ : res) ", "prediction": "omp parallel for schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for directive. Here's the updated code with the optimal OpenMP pragma:"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(+:work)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(j k m)", "prediction": "omp parallel for collapse(3) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:norm) ", "prediction": "omp parallel for reduction(+:norm)"}
{"label": "parallel for reduction(+:x) reduction(*:y) ", "prediction": "omp parallel for reduction(+:x) reduction(*:y)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(  i timer vic_run_ref_str)", "prediction": "omp parallel for"}
{"label": "parallel for private(       ctr i j k t1 t2 t3 u)", "prediction": "omp parallel for collapse(3) private(k, i, j, ctr, t1, t2, t3, u) shared(npol, ignore_edge_pixels, right_pixel_limit, imsize, dx_dot_df, model_step, hessian, grad_step, df_dot_hessian_dot_df, do_bfgs)"}
{"label": "for ", "prediction": "omp parallel for schedule(static)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(: min std::min) reduction(: max std::max) ", "prediction": "omp parallel for reduction(min : min) reduction(max : max)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:j) private(   b c d f g h)", "prediction": "omp parallel for private(i) shared(a, b, c, d, e, f, g, h, j)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(+:Norm2)"}
{"label": "parallel for private(fl)", "prediction": "omp parallel for"}
{"label": "for private(it)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for default(none) shared(x, x_tile, tileCosts, grad_par_out, tempStorage, tileOffZ) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(ii tid)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2) private(tmp) shared(a, b, c)"}
{"label": "parallel for ", "prediction": "omp parallel for private(kz) shared(elem, nelem)"}
{"label": "parallel for private(c cid k p pid)", "prediction": "omp parallel for private(cid) shared(s)"}
{"label": "parallel for private(j)", "prediction": "omp parallel for reduction(+: sum)"}
{"label": "parallel for private(c k p)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2) reduction(+:tmean) reduction(min:tmmin) reduction(max:tmmax)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for shared(vd, triangle, points, Z, tree, z_out) private(i, abort, it, vertex, edge, cell, A_, A, B_, B, C_, C, u, v, w, edge_AB, edge_AC, edge_BC, edge_max, tri, pts, j, p, n, nn, norm, intercept)"}
{"label": "parallel for private(ix iz)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": ""}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(+:sum0,sum1,sum2,sum3,sum4) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(k, j, i, uijk, up1, um1) \\"}
{"label": "for ", "prediction": "omp parallel for schedule(static) collapse(3)"}
{"label": "parallel for reduction(+: fval) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(h)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction( +: sum_coverage sum_length) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:s) private(d j)", "prediction": "omp parallel for collapse(2) reduction(+:s)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i j k)", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for private(triangle, triangleWithValues, anyValidVertex) shared(threadTriangles, m_contourPolygons, subtractPolygons) "}
{"label": "parallel for reduction(+:hipass_sum hipass_norm) ", "prediction": "omp parallel for"}
{"label": "parallel for private(k)", "prediction": "omp parallel for"}
{"label": "parallel for private(j)", "prediction": "omp parallel for private(j, m, n) collapse(3) schedule(dynamic)"}
{"label": "for private(  i isym ixyz)", "prediction": "omp parallel for private(i, isym, ixyz, i_prim, ind, iter_found, c_tmp, j, loc_nonzero) shared(atm_index, xyz_index, atm_index_symm, const_now_omp, ind, list_found, const_tmp_omp, constraint_list_omp)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(   arg bias i v)", "prediction": "omp parallel for private(i, arg, v) shared(in, offset, n, size)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(y, x, prefscale)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for simd collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i1 i2 iop)", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for collapse(3)"}
{"label": "simd for reduction(+:tmp) ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(4) schedule(static)"}
{"label": "for ", "prediction": "omp parallel for ordered"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(j)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for schedule(static, 1)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(dl dlm1 dlp1 index_mu l ll)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static) private(x) shared(video, luma, chroma, yuv2rgbtable_ru, yuv2rgbtable_gu, yuv2rgbtable_gv, yuv2rgbtable_bv, yuv2rgbtable_y)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for private(     i nh nl nxl pres ptl)", "prediction": "omp parallel for private(lp) shared(plev, nx, ngp, pt, nxl, ptl, ngp, missval, nl, nh, ngp, nhlev, ptl, gt, hyb_press) "}
{"label": "parallel for private(    diffvx_x diffvx_z diffvz_x diffvz_z i1 i2 tmp tmpxx tmpxz tmpzz)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for reduction(+: usage) private(i)", "prediction": "omp parallel for reduction(+:usage)"}
{"label": "parallel for private(k)", "prediction": "omp parallel for private(k) reduction(+:B[i][j])"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(diff1 diff2 i1 i2)", "prediction": "omp parallel for collapse(2) num_threads(NUM_THREADS)"}
{"label": "for ", "prediction": "omp parallel for schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(+:avLumThrv, avLumThr)"}
{"label": "parallel for reduction(+:result) ", "prediction": "omp parallel for reduction(+:result)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i j k)", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "for simd ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private( c v)", "prediction": "omp parallel for"}
{"label": "parallel for private(i_j)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for reduction(+:t_front_count) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private( ix iz)", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static)"}
{"label": "parallel for private(   f i pf qf)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for simd"}
{"label": "parallel for reduction(   +:tpp fnn fpp tnn) ", "prediction": "omp parallel for reduction(+: tpp, fpp, tnn, fnn)"}
{"label": "parallel for reduction(+ : sum) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2) "}
{"label": "for ", "prediction": "omp parallel for collapse(4) reduction(+:rho1)"}
{"label": "parallel for private(  delta i t)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(i j)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(max:cur_max)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(  + : nactive s1 s2) private(t)", "prediction": "omp parallel for reduction(+: s1, s2, nactive)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for simd ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for num_threads(num_threads)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for collapse(4)"}
{"label": "parallel for ", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3) schedule(dynamic)"}
{"label": "parallel for private(j)", "prediction": "omp parallel for"}
{"label": "parallel for private(tt)", "prediction": "omp parallel for private(tt,t,t1,t2,num_rot1,delta_theta,rr,theta,image_t,width_r,height_r,width_t,height_t,fproj_sx,fproj_sy,fproj_x1,fproj_y1,fproj_x2,fproj_y2,fproj_x3,fproj_y3,sigma_aa,image_tmp,keypoints,keypoints_filtered,x0,y0,x1,y1,x2,y2,x3,y3,x4,y4,d1,d2,d3,d4,scale1,theta1,sin_theta1,cos_theta1,BorderTh) "}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for private( c r)", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for reduction(: dot result) ", "prediction": "omp parallel for reduction(*:result)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( i instance)", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private(lbv t3 t4 ubv)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private(            dx dy dz i offset ox oy oz phitemp xpa xy xysq ypa)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3) "}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i1 i2 i3)", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for private(i, j, k, subprob) shared(target) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(max:max_thread) reduction(min:min_thread)"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static) collapse(2)"}
{"label": "for private(i j)", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for schedule(dynamic)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( id index)", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "for private(k m n)", "prediction": "omp parallel for collapse(2) private(m, n) shared(i, rhs, lhs)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for private(prvt)", "prediction": "omp parallel num_threads(thds)"}
{"label": "parallel for private( j tmp)", "prediction": "omp parallel for"}
{"label": "for reduction(+:sum) private(d)", "prediction": "omp parallel for reduction(+:sum)"}
{"label": "for ", "prediction": "omp parallel for schedule(static) private(j) shared(iter)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(ix iz)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(ispn, bound_state) schedule(dynamic)"}
{"label": "parallel for private(i test)", "prediction": "omp parallel for"}
{"label": "for reduction(+:ca) ", "prediction": "omp parallel for collapse(2) reduction(+:ca) reduction(max:cm1) reduction(max:xm1)"}
{"label": "parallel for reduction(+:sum) ", "prediction": "omp parallel for reduction(+: sum)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for reduction(+ : n_kmers) ", "prediction": "omp parallel for reduction(+:n_kmers)"}
{"label": "parallel for private(             i p x x1 x2 xf y y1 y2 yf z z1 z2 zf)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(k tmp)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(i) shared(inUrls, mixedUrls, preProcessedUrlsMap, error)"}
{"label": "parallel for private(solver)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:res) ", "prediction": "omp parallel for reduction(+:res)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for private(k)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(ix iz)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+ : gradgamma[:cols]) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(m, j, k) collapse(3) reduction(+: rhs)"}
{"label": "parallel for private(theta)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static) num_threads(mglNumThr)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(d) reduction(+:p->x[:np][:3]), reduction(+:p->v[:np][:3])"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:sum) private(  i j k)", "prediction": "omp parallel for reduction(+: sum)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for shared(a,c,b) private(x,y,z,f,w,k) schedule(dynamic)"}
{"label": "parallel for private(j k r t)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for schedule(static) collapse(2)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(     collision inv_sinh j k l ti)", "prediction": "omp parallel for private(inv_sinh, ti, j, k, l, collision) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for shared(height, width, tempCoeff, smootCoeff, nKernel, ncomp) private(y, x, offset, sx, ex, sy, ey, n, k, jj, ii)"}
{"label": "parallel for private(       central_pixel ix iy iymax iymin sum_weights sum_weightximg weight)", "prediction": "omp parallel for private(iy, ix, iybuf, central_pixel, iymin, iymax, sum_weights, sum_weightximg, weight) shared(output_image, input_image, binary_M)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:cc) ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(   j nsize_group phase ret_in)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static, BLOCK_SIZE)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private(rand_vec_1 rand_vec_2)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:akt akr) private(ibody)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(w)", "prediction": "omp parallel for private(i, j, w)"}
{"label": "parallel for private(  node reoriented velvalues)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(max:tempbmax) ", "prediction": "omp parallel for private(inc, x, n, temptot2, veltot, vel, qtot, tau, velnum, slopetot, tempdir, temp_dist) shared(down_scan, Vel, Tau, sr, sl, su, sd, ss, water_depth, water_depth_erosion_threshold, spatially_var_mannings, mannings, spat_var_mannings, index, addGS, deltaX, deltaY, edge, vel_dir, max_vel, elev, DX, gravity, d50, d1, d2, d3, d4, d5, d6, d7, d8, d9, wilcock, dprop, grain, G_MAX, rho, sand_fraction, bedrock, bedrock_erosion_threshold, bedrock_erosion_rate, elevdiff, veg, vegTauCrit, tempbmax, temp_dist, temp_dist, temp_dist, temp_dist, isSuspended, Csuspmax, Vsusptot, time_step, mult_factor, einstein)"}
{"label": "parallel for ", "prediction": "omp parallel for default(none) shared(grid, backups)"}
{"label": "parallel for private(   image image_gray image_gray_ud image_ud)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:tmp) ", "prediction": "omp parallel for reduction(+:tmp)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(vox)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for\" directive. "}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private(n)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) default(none) shared(n, k, lda, ldc, alpha, beta, A, C)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(j)", "prediction": "omp parallel for schedule(static)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( ix iz)", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:penaltyterm) private(    i j jacindex k logdet)", "prediction": "omp parallel for collapse(3) reduction(+: penaltyTerm)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(n)", "prediction": "omp parallel for shared(rval) private(seed) num_threads(num_threads)"}
{"label": "for reduction( +:s inscan) private(x y z)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:colored) ", "prediction": "omp parallel for"}
{"label": "parallel for private( i idx)", "prediction": "omp parallel for private(idx, s, w) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i x y)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for "}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "for simd ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(+:p_s,p_a)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private( j k_l)", "prediction": "omp parallel for default(none) shared(ths, f, f_hat) private(k_L, k, k_temp, t, j)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for "}
{"label": "parallel for reduction(+:q_c_total) private(i2 tmpa tmpb vala valb)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for schedule(static)"}
{"label": "for ", "prediction": "omp parallel for schedule(dynamic) reduction(+: total_Elp)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(j)", "prediction": "omp parallel for private(j, ind) shared(EToR, h, u, v, nx, ny, h_ext, eidtype, dflux)"}
{"label": "parallel for private(k)", "prediction": "omp parallel for"}
{"label": "simd for reduction(+:s t) ", "prediction": "omp parallel for reduction(+:s,f)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(  i j k)", "prediction": "omp parallel for private(buff) shared(mpGrid)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private(k)", "prediction": "omp parallel for private(u, o, l, psij_const) shared(g)"}
{"label": "parallel for private(iel)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(3) schedule(static) shared(z, ten, j1, j2, j3)"}
{"label": "for ", "prediction": "omp parallel for reduction(+:total) reduction(+:ignored) reduction(+:total_size)"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+: loglikelihoodsArr)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(    gradrefphi ie k l nln nln2 numrowselements phi q w)", "prediction": "omp parallel for private(ie, k, q, d1, d2, d3, a, b, iii, ii) shared(gradphi, G, g, traceGtG, tauK, bh_gradPHI, myArows, myAcols, myAcoef, myMcoef, myRrows, myRcoef) schedule(static)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(dist, cluster_id, sample_id, bv) schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2) "}
{"label": "parallel for private(i1 i2)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:elpystar) ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(+:hits)"}
{"label": "parallel for private(    c ca2d contiguouslinkedlist current)", "prediction": "omp parallel for default(none) shared(ca2D, M_dest, M_src) schedule(static)"}
{"label": "for ", "prediction": "omp parallel for private(prev_slope, same_sign, temp_slopes, k, train_slopes) shared(prev_steps, prev_train_slopes, weights) schedule(static)"}
{"label": "parallel for private(   k n sum0 sum1)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(            flp_a flp_a flp_b flp_b flp_c flp_c fp_a fp_b fp_c l_a l_b l_c p_a p_b p_c)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(     cl cl_bases cl_quals count cy th_id)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for default(none) shared(image, threshold_image, image_view, threshold_view, exception, number_pixels, offset) private(y, sync, channel_bias, channel_sum, indexes, p, r, threshold_indexes, q, x, u, v, mean) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:niters) private(  i j x)", "prediction": "omp parallel for collapse(2) reduction(+: niters)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:te) ", "prediction": "omp parallel for reduction(+:te)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(ix iz)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(factor1 factor2 i idx idxa idxb k mumean)", "prediction": "omp parallel for private(j, k, idxA, idxB, muMean, factor1, factor2, idx)    "}
{"label": "parallel for private(       albedo dem g0 h0 rn rowcol t0dem tempk)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for shared(part_sizes_thread)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "for reduction(+:tmp1 tmp2) private(ii)", "prediction": "omp parallel for reduction(+:tmp1,tmp2)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "for simd ", "prediction": "omp parallel for   "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for reduction(+:numdistancecomputationstorefreshub numdistancecomputationstorefreshlb) private(c x)", "prediction": "omp parallel for simd"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for private(  n norm_factor tgt_cell_add)", "prediction": "omp parallel for shared(num_links, rv, tgt_grid, num_wts) private(n, tgt_cell_add, norm_factor)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( cellscalarvalue texcoord)", "prediction": "omp parallel for"}
{"label": "parallel for private(       plat plon search_result src_add src_lats src_lons tgt_cell_add wgts)", "prediction": "omp parallel for private(lprogress) shared(weightlinks, tgt_grid) schedule(dynamic)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i2 ij kx tmp1)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(pcount)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static) private(y, composite, pixel, alpha, offset, q, i, x, j)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(k)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(previousD, previousW, ray, uv, j, i, Di, Eta, D, W) schedule(static)"}
{"label": "for ", "prediction": "omp parallel for collapse(3) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(   freqs_tmp gp info j)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2) schedule(static, 1) private(yA, yB, yC, yD, yM, rA, rB, rC, rD, idn, comp)"}
{"label": "parallel for ", "prediction": "omp parallel for private(planeNr, plane, newplane, H, W) shared(nrOfPlanes, image, _result) schedule(dynamic)"}
{"label": "parallel for private(k)", "prediction": "omp parallel for private(k, ti, i, j, mx, my, mz, maxval, x, y, z) schedule(static)"}
{"label": "parallel for private(i1 i2 i3 u1 u2)", "prediction": "omp parallel for private(i3, i2, i1) shared(u, u1, u2, v, a, r)"}
{"label": "parallel for reduction(+ : fz) ", "prediction": "omp parallel for reduction(+: Fz)"}
{"label": "parallel for reduction(  + : average) ", "prediction": "omp parallel for reduction(+: average)"}
{"label": "for ", "prediction": "omp parallel for private(ip) shared(NumThreads, W, wPerNode, Movers, nSteps)"}
{"label": "parallel for reduction(+:errors) ", "prediction": "omp parallel for reduction(+: errors)"}
{"label": "parallel for ", "prediction": ""}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp target teams distribute simd"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for private(j, m, i, ixrcv, tmp) shared(sum, rdata, syndata, shots, syncdata) schedule(static)"}
{"label": "parallel for reduction(+:myl2) ", "prediction": "omp parallel for reduction(+: myl2)"}
{"label": "parallel for reduction(+:recall) ", "prediction": "omp parallel for"}
{"label": "parallel for private(lbv t3 t4 t5 t6 t7 t8 ubv)", "prediction": "omp parallel for collapse(6) schedule(static) "}
{"label": "parallel for private(a j x)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(dynamic)"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private(k)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:sum0 sum1 sum2 sum3) ", "prediction": "omp parallel for"}
{"label": "parallel for private(ix iz)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for private(cnt)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for default(none) shared(m_reachs, m_qSubbasin, m_qCh) private(it, reachIndex, vecCells, n, iCell)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:memoryused) ", "prediction": "omp parallel for private(hpDim, phDim, hpIndex, phIndex, vpqrs)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+:glo,tot)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+ : accum) ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(rands)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+: sum) ", "prediction": "omp parallel for reduction(+:sum)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for private(                    ic iht ihx ihz mct mcx mcz pct pcx pcz)", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+:mean)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(aux_ind foo j)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(j)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(pixel)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for reduction(+:fnorm_sqr_help) private(coeff)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(L, hits, index, scanline, x) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private( ix iz)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i j)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for reduction( +:score numturns) ", "prediction": "omp parallel for reduction(+:score,numTurns)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(ix iz)", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(  c count z)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(c c_dest cid delta k p pid)", "prediction": "omp parallel for schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for simd ", "prediction": ""}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:error) private(  i j resid)", "prediction": "omp parallel for collapse(2) reduction(+:error)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private( a::x b::x f f)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+: nabx naby nabz) private(cc gxj gyj gzj i indp j)", "prediction": "omp parallel for reduction(+:nabx, naby, nabz) private(indp, cc, gxj, gyj, gzj)"}
{"label": "parallel for reduction(+:tp fn fp tn) ", "prediction": "omp parallel for reduction(+:tp, fn, fp, tn)"}
{"label": "parallel for private(out row)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(k)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(t) "}
{"label": "parallel for private(v)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(   indir indirptr outdir rendereddata)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+: sum) private(factor)", "prediction": "omp parallel for reduction(+:sum)"}
{"label": "for ", "prediction": "omp parallel for reduction(+:totlistsize) shared(nbList, complNbList, myMaxLength)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for default(none) shared(x, numArgs, inArrs, output)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(3) reduction(+: bbxx, bbxy, bbxz, bbyx, bbyy, bbyz, bbzx, bbzy, bbzz, vvxx, vvxy, vvxz, vvyx, vvyy, vvyz, vvzx, vvzy, vvzz, bvxx, bvxy, bvxz, bvyx, bvyy, bvyz, bvzx, bvzy, bvzz, vbxx, vbxy, vbxz, vbyx, vbyy, vbyz, vbzx, vbzy, vbzz)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for private(cont)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) "}
{"label": "for ", "prediction": "omp parallel for ordered"}
{"label": "for reduction(+:s_aux) private(node_i node_j)", "prediction": "omp parallel for reduction(+:s_aux)"}
{"label": "parallel for reduction(+:energyrecipnew) ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(rand_vec)", "prediction": "omp parallel for private(thread_num, c_1, c_2, c_3, rand_ind, X_prop, prop_objfn_val) shared(n_pop, n_vals, rand_engines_vec, rand_vec, X, best_vec, par_CR, par_F, mutation_method, X_next, objfn_vals, opt_data)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static) private(y, p, q, x, i) shared(status, image, rotate_view, exception) reduction(& &: status)"}
{"label": "parallel for private( rec1 rec2)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:sum) ", "prediction": "omp parallel for reduction(+:sum)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(rr2)", "prediction": "omp parallel for collapse(2) schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(3) default(none) shared(rhs, u, dssp, grid_points) private(k, j, i, m)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private(i j)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+: s2_easy) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(current_mapfilenode, content, k, size, current_pos, ntype, has, new_content) shared(threadntypeoffsetiter, thread_mapfile, threadtranscontent)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for "}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(temp_coo_v, temp_coo_p, dxyz, vval, i_index)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:ward) ", "prediction": "omp parallel for reduction(+:ward) "}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(j)"}
{"label": "parallel for ", "prediction": "omp parallel"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(t)", "prediction": "omp parallel for schedule(static)"}
{"label": "for private(ix)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) private(tl, cc, br, RGB, pix_in, pix_out)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(currWalkerNewPos, threadNum) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for default(none) shared(U, V, NI, NJ, NK, HI, HJ, HK, REVI, REVJ, REVK, notconvergedt) schedule(dynamic) "}
{"label": "parallel for private(ix iz)", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(j)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(dynamic) private(sum, r)  "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(i j n4)", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for reduction(+:d) ", "prediction": "omp parallel for reduction(+:d)"}
{"label": "parallel for private(blockid)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(       aperiodic dr dr_corr drdt drsqd dv invdrmag potperiodic)", "prediction": "omp parallel for"}
{"label": "for reduction( - : alpha) ", "prediction": "omp parallel for collapse(2) shared(a, b, c)"}
{"label": "parallel for private(j k)", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(sum0 sum0)", "prediction": "omp parallel for reduction(+:sum0, sum1)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(j)", "prediction": "omp parallel for reduction(+:val) private(j, k, dist, coo)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) reduction(+:d)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(   i index indexshifted j k)", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static) num_threads(NUM_THREADS)"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for reduction(+:delta_u residual) ", "prediction": "omp parallel for reduction(+: residual, delta_u)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(j)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(idx, image, rnd, mlt, seedPaths, sumI, selecetdPath, b, p_large, M, accept, reject, oldPath) num_threads(num_threads)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(max:maxValue,min:minValue)"}
{"label": "parallel for private(t)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(&:result) ", "prediction": "omp parallel for reduction(&&:result)"}
{"label": "parallel for private(cont)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(      bitmask char_value i j loop_index p_index start_index)", "prediction": "omp parallel for private(bitmask, start_index, p_index, bit_index, char_index) shared(mapping_table, itr, result_reads)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(y, p, i, x, bit, byte) shared(status, image_view, image, threshold, source_cells, bits) schedule(dynamic)"}
{"label": "parallel for reduction(+:tmp) private(  axvec axvec j val xvec)", "prediction": "omp parallel for private(j, tmp) shared(axvec, val, xvec, col)"}
{"label": "parallel for private( j offset)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)  "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private( a b)", "prediction": "omp parallel for private(i) shared(a, b)"}
{"label": "parallel for reduction(+ : fixed) ", "prediction": "omp parallel for collapse(2) reduction(+:fixed)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(  i j t)", "prediction": "omp parallel for collapse(2) reduction(+:t) "}
{"label": "parallel for reduction(  +:wt11 wt22 wt33) private( factor i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+:cell_volume,s0_env,sG_env,sA_env,sAcL_env)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel reduction(&&: andl) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(t2 t3 t4 t5 t6)", "prediction": "omp parallel for collapse(4) schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2) reduction(+:cnt)"}
{"label": "parallel for reduction(+:sum_var_med) ", "prediction": "omp parallel for reduction(+:sum_var_med)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( j p)", "prediction": "omp parallel for default(none) shared(ns, nf, a0, a1, data, out) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( ix iz)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel ", "prediction": "omp parallel for private(i, j, k) shared(M1, M2, M3)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(p)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(k)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i1 i2 ith)", "prediction": "omp parallel for private(i1, ith) shared(icfg2, inp, ctrace2, nk) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for default(none) shared(dat, tot, amps, ndata, nchan, totsqr) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(                  a b index intensity position previous relative world xbasis xtempnewvalue xypointer y ybasis ypointer)", "prediction": "omp parallel for"}
{"label": "parallel for private(      bitmask char_value i j loop_index p_index start_index)", "prediction": "omp parallel for private(bitmask, start_index, p_index, bit_index, char_index, i, j, char_value) "}
{"label": "parallel for reduction(+:dk) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:siga) private(cc cc1 cc2 cc3 ss ss1 ss2 ss3)", "prediction": "omp parallel for reduction(+:siga)"}
{"label": "for private(k m)", "prediction": "omp parallel for private(i, k, m) shared(u, rhs)"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(p, v, vmin) shared(vold, vnew, v0)"}
{"label": "parallel for reduction(+ : l) ", "prediction": "omp parallel for reduction(+:l)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:splink) reduction(+:tlink) private(i)", "prediction": "omp parallel for reduction(+:splink,tlink)"}
{"label": "parallel for private(         heta hxi j lambdaeta lambdaxi node ueta uxi veta vxi)", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:norm) private(tmp)", "prediction": "omp parallel for reduction(+: norm) "}
{"label": "parallel for private(   h hp0 hp1 i)", "prediction": "omp parallel for"}
{"label": "parallel simd reduction(+:r11[1:13]) ", "prediction": "omp parallel for shared(r11)"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( ix iz)", "prediction": "omp parallel for collapse(2) reduction(+:a,b,c)"}
{"label": "parallel for reduction(+:producto) ", "prediction": "omp parallel for private(producto, k) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for private(i j li)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for schedule(dynamic)"}
{"label": "for ", "prediction": "omp parallel for collapse(2) shared(tmpSize)"}
{"label": "for ", "prediction": "omp parallel for ordered collapse(2)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:sum) ", "prediction": "omp parallel for reduction(+:sum)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:err_average) ", "prediction": "omp parallel for reduction(+: err_average)"}
{"label": "parallel for reduction(min:minval) reduction(max:maxval) ", "prediction": "omp parallel for reduction(min: minVal) reduction(max: maxVal)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) simd"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(   i j p sum)", "prediction": "omp parallel for"}
{"label": "for private(j k)", "prediction": "omp parallel for collapse(3) schedule(static)"}
{"label": "for reduction( +:r s) reduction( +: t task) private(conditional: v)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:s0 s1 s2 s3 s4 s5) private(i)", "prediction": "omp parallel for reduction(+:s0,s1,s2,s3,s4,s5)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+: g) ", "prediction": "omp parallel for reduction(+:G)"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(ix iz)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( j k)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(temp_row)", "prediction": "omp parallel for"}
{"label": "parallel for private(   i k offset thread_id)", "prediction": "omp parallel for private(j, i, k, offset) shared(J_theta, J_theta_tmp, p_best, routers, p_it_mif, p_it_fls)"}
{"label": "parallel for ", "prediction": "omp parallel for shared(bodies) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(tbp, Tbp, subret) schedule(static)"}
{"label": "for ", "prediction": "omp parallel for collapse(4)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(i)", "prediction": "omp parallel for reduction(max : ThreadMax) reduction(min : ThreadMin)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(acc d j r)", "prediction": "omp parallel for "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(i, type_i, sbp_i, val_i, Deltap_i, Deltap_boc_i, start_i, end_i, pj, j, type_j, bo_ij, twbp, val_j, Deltap_j, Deltap_boc_j, exp_p1i, exp_p2i, exp_p1j, exp_p2j, f2, f3, f1, temp, u1_ij, u1_ji, Cf1A_ij, Cf1B_ij, Cf1_ij, Cf1_ji, exp_f4, exp_f5, f4, f5, f4f5, Cf45_ij, Cf45_ji, A0_ij, A1_ij, A2_ij, A2_ji, A3_ij, A3_ji) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for shared(model, traps, runtimeFail, status) private(i) reduction(|:localStatus)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:usedreads) ", "prediction": "omp parallel for reduction(+: usedReads)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for private(i) shared(pyramid, detector, opt, res) schedule(dynamic)"}
{"label": "parallel for reduction(+:total_diff) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:flag) private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for shared(particles, tomogram, referenceMap, particleSet, aberrationsCache, flip_value, freqWeights, doseWeight, evenData_thread, oddData_thread) private(p)"}
{"label": "for ", "prediction": "omp parallel for collapse(4)"}
{"label": "parallel for reduction(+:energyrecip[:lambdasize]) private(       coefdiff dotproduct i p s sumimaginary sumreal)", "prediction": "omp parallel for private(sumReal, sumImaginary, dotProduct) shared(energyRecip) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i1 i2)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static)"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(c f fi r rx sum v)", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(fq_read)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for "}
{"label": "parallel for private(n)", "prediction": "omp parallel for private(tid, seed, generator) shared(rval)"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(temp)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:acc) private(i)", "prediction": "omp parallel for reduction(+: acc)"}
{"label": "parallel for ", "prediction": "omp parallel"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static) "}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(p)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(j, k, i) shared(B, A, alpha, ldb, lda, m, n, diag)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3) schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for private(k, j, l, tid, tD) schedule(static)"}
{"label": "parallel for reduction(+: num_removed) ", "prediction": "omp parallel for reduction(+:num_removed)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:number) ", "prediction": "omp parallel for reduction(+:number)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(4)"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(x, pl1, pl2, f, d, z, w)"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static) reduction(+:state.pixelsProcessed) private(pixelIndex, offsetPixelIndex, x, y, pixelCoordinate, generator) shared(state, generators, interrupted)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(            diff i iat ii isym itype j jat jj rot_double tmp x_tmp xnew)", "prediction": "omp parallel for private(isym, i, j, itype, ii, iat, x_tmp, rot_double, xnew, jj, jat, tmp, diff) schedule(dynamic)"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(i, j) shared(data, ann_vect, predicted_outputs) "}
{"label": "parallel for private(ix iz)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(dynamic) "}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for reduction( +: t task) private( conditional: u x)", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:total_cst_rows) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:sum) ", "prediction": "omp parallel for reduction(+:sum)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(k)", "prediction": "omp parallel for schedule(static) collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for reduction( *: j task) ", "prediction": "omp parallel for schedule(static)  "}
{"label": "parallel for reduction(  + : nbnotnan sumimag sumreal) ", "prediction": "omp parallel for reduction(+:sumReal,sumImag,nbNotNaN)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(au av aw xu xv xw yu yv yw zu zv zw)", "prediction": "omp parallel for private(i, j, k, au, av, aw, xu, xv, xw, yu, yv, yw, zu, zv, zw) schedule(static)"}
{"label": "parallel for private(its)", "prediction": "omp parallel for private(i, its) reduction(+: r)"}
{"label": "parallel for reduction(+: rho) private(chib chii i indr j)", "prediction": "omp parallel for reduction(+: rho)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(index)", "prediction": "omp parallel for shared(pSceneDescriptors, index, distance, neighbors, pCorrespondences) private(i, p, indices, distances, neighborsFound) "}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(    index intensity position previous world)", "prediction": "omp parallel for"}
{"label": "for reduction(+:num_swapped_1) ", "prediction": "omp parallel for"}
{"label": "parallel for private(                          a b c coeff grad index position previous relative x xbasis xtempnewvalue xxtempnewvalue xyzpointer y ybasis ytempnewvalue yytempnewvalue z zbasis zpointer zztempnewvalue)", "prediction": "omp parallel for"}
{"label": "parallel for private(nip)", "prediction": "omp parallel for"}
{"label": "parallel for private(iz)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+:Acol_tot)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for private(t) reduction(+:s)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+:L)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(ptridx)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(4) schedule(static)"}
{"label": "parallel for private( i i1 j j1 temp)", "prediction": "omp parallel for schedule(dynamic) private(i, i1, j, j1, dirwt_l, dirwt_ab, norm_l, norm_ab, Lout, aout, bout, inbr, jnbr, Temp) collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2) "}
{"label": "parallel for simd ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i u v w)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for ordered"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction( +:a inscan) ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for "}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( img_elem model_elem)", "prediction": "omp parallel for private(row_idx, model_elem, img_elem, img_block_8, block) shared(in_img, m_model)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for private( ix iz)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for reduction(+:argv[0][:1]) ", "prediction": "omp parallel for"}
{"label": "parallel for private(p)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(4) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "for simd ", "prediction": ""}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:resultado) ", "prediction": "omp parallel for reduction(+:resultado)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(lbv t3 t4 ubv)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:memoryused) ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for num_threads(mglNumThr)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(      + : akden) ", "prediction": "omp parallel for reduction(+: akden)"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for schedule(dynamic)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "for private(   lk1 lk2 lm1 ln1)", "prediction": "omp parallel for"}
{"label": "for reduction(+: sum) ", "prediction": "omp parallel for reduction(+:sum)"}
{"label": "for reduction(+:nnzcols) ", "prediction": "omp parallel for reduction(+:nnzcols)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(4)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( i j)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(ik ix k tmp tmpdt tmpex x)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:sum) ", "prediction": "omp parallel for reduction(+:sum)"}
{"label": "parallel for private(d g r)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel reduction(orc ||:) ", "prediction": "omp parallel for\" pragma. Here is the resulting code:"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:porosidade) private(i j k)", "prediction": "omp parallel for reduction(+: porosidade)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(&& : done) ", "prediction": "omp parallel for collapse(3) "}
{"label": "for private(    diff dist j k sum)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(      a_c_i_j a_c_j_i j m n s_w_c_i_j s_w_c_j_i)", "prediction": "omp parallel for private(j,m,n,Y_i_size,Y_j_size,A_c_i_j,A_c_j_i,s_W_c_j_i,s_W_c_i_j)"}
{"label": "parallel for private(p)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:v0 v1 v2 v3 v4 v5) ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for reduction(+:I_partial)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(4)"}
{"label": "parallel for private( image image_ud)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3)"}
{"label": "parallel for simd ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i1)", "prediction": "omp parallel for"}
{"label": "parallel for private(k zz)", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for simd private(conditional: x)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+: count)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:a_init_time) reduction(+:a_einit_time) private(   delta i t t2)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for simd reduction(+:diffnorm) ", "prediction": "omp parallel for reduction(+:diffnorm)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(3) reduction(+:sumv) schedule(dynamic)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(      bitmask char_value i j loop_index p_index start_index)", "prediction": "omp parallel for"}
{"label": "parallel for private( current index j startingindex value x)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(3) schedule(dynamic)"}
{"label": "parallel for private(    error mi ri tempu ui)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(3) schedule(static)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(g, obsR, p, randSubset, rot, tilt, psi, A3D, trans, fom, Fsub, F2D, F2DP, F2DQ, ctf, beamtilt_x, beamtilt_y) shared(gc, mdts, image_path, ref_dim, angular_error, shift_error, do_3d_rot, do_fom_weighting, transformer, obsModel, subProjector, backprojectors, prevProjectors, prevSlice, do_ctf, do_beamtilt, do_ewald, Fctf, mysize, angpix, mask_diameter, r_ewald_sphere, fn_sub, read_weights, L1_freq, L1_weights, L1_eps, iter)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) default(none) shared(self, x, y, radius, hardness, aspect_ratio, angle, sum_weight, sum_r, sum_g, sum_b, sum_a) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction( + : ndis nlist_visited) ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2) schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:tmp1 tmp2) private(i)", "prediction": "omp parallel for reduction(+:tmp1,tmp2)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(plane)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(complex_add:x) reduction(complex_mul:y) ", "prediction": "omp parallel for reduction(+:x,y)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(+:tmp) ", "prediction": "omp parallel for reduction(+:tmp)"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for private(k)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for private(i2 ij kx)", "prediction": "omp parallel for collapse(2) "}
{"label": "parallel for ", "prediction": "omp parallel for reduction(+:magnetization)"}
{"label": "parallel for private(i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for private(M, E, V, D, Di, ptr_M, ptr_Mi, ptr_V, ptr_Vi, m2, m22, msz, uplo, range, jobzn, vu, vl, il, iu, abstol, lda, ldz, numfind, info, lwork, liwork, lzwork, isuppz, work, zwork, ii, jj) schedule(dynamic)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for reduction(    cx_mem cy_mem sx_mem sy_mem vec_double_plus:fs_mem) private(      aux positions_mem s1_mem s2_mem tailposition x ztaildistance)", "prediction": "omp parallel for"}
{"label": "parallel private(a b c d i)", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for private( i j)", "prediction": "omp parallel for private(j) "}
{"label": "parallel for private(i)", "prediction": "omp parallel for collapse(2) schedule(static)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for collapse(2)"}
{"label": "parallel for reduction(+ : sum) private(                                   comp i1 i2 i3 idn r ra rabdc rabfe rb rbdhf rc rcaeg rd rdcgh re refhg rf rg rh rm rptr wptr ya yabdc yabfe yb ybdhf yc ycaeg yd ydcgh ye yefhg yf yg yh ym)", "prediction": "omp parallel for schedule(static) collapse(3)"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "parallel for ", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
{"label": "parallel for private(  i instance_i instance_j)", "prediction": "omp parallel for"}
{"label": "for ", "prediction": "omp parallel for"}
